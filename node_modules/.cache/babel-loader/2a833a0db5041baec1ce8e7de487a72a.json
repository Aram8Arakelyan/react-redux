{"ast":null,"code":"import { loadCurrentUser } from \"./currentUserApi\";\nexport const currentUserReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  if (action.type == 'edit-current-user-name') {\n    return {\n      name: action.payload.name\n    };\n  }\n\n  return state;\n};\nexport const currentUserData = {\n  name: 'Joe shmoe'\n};\nexport const selectName = state => {\n  return state.currentUser.name;\n}; // Action creator\n\nexport const editName = newName => {\n  return {\n    type: 'edit-current-user-name',\n    payload: {\n      name: newName\n    }\n  };\n}; // Redux Thunk\n\nexport const loadUser = () => {\n  return (dispatch, getState) => {\n    return loadCurrentUser().then(loadUser => {\n      dispatch(editName(loadUser.name));\n    });\n  };\n};","map":{"version":3,"sources":["/var/www/html/reate-redux/src/redux/features/currentUser/currentUserSlice.js"],"names":["loadCurrentUser","currentUserReducer","state","action","type","name","payload","currentUserData","selectName","currentUser","editName","newName","loadUser","dispatch","getState","then"],"mappings":"AAAA,SAAQA,eAAR,QAA8B,kBAA9B;AAEA,OAAO,MAAMC,kBAAkB,GAAG,YAAwB;AAAA,MAAvBC,KAAuB,uEAAf,EAAe;AAAA,MAAXC,MAAW;;AACtD,MAAIA,MAAM,CAACC,IAAP,IAAe,wBAAnB,EAA6C;AACzC,WAAO;AACHC,MAAAA,IAAI,EAAEF,MAAM,CAACG,OAAP,CAAeD;AADlB,KAAP;AAGH;;AACD,SAAOH,KAAP;AACH,CAPM;AASP,OAAO,MAAMK,eAAe,GAAG;AAC3BF,EAAAA,IAAI,EAAE;AADqB,CAAxB;AAIP,OAAO,MAAMG,UAAU,GAAIN,KAAD,IAAW;AACjC,SAAOA,KAAK,CAACO,WAAN,CAAkBJ,IAAzB;AACH,CAFM,C,CAKP;;AACA,OAAO,MAAMK,QAAQ,GAAIC,OAAD,IAAa;AACjC,SAAO;AACHP,IAAAA,IAAI,EAAE,wBADH;AAEHE,IAAAA,OAAO,EAAE;AACLD,MAAAA,IAAI,EAAEM;AADD;AAFN,GAAP;AAMH,CAPM,C,CASP;;AACA,OAAO,MAAMC,QAAQ,GAAG,MAAM;AAC1B,SAAO,CAACC,QAAD,EAAWC,QAAX,KAAwB;AAC3B,WAAOd,eAAe,GAAGe,IAAlB,CAAwBH,QAAD,IAAc;AACxCC,MAAAA,QAAQ,CAACH,QAAQ,CAACE,QAAQ,CAACP,IAAV,CAAT,CAAR;AACH,KAFM,CAAP;AAGH,GAJD;AAKH,CANM","sourcesContent":["import {loadCurrentUser} from \"./currentUserApi\";\n\nexport const currentUserReducer = (state = {}, action) => {\n    if (action.type == 'edit-current-user-name') {\n        return {\n            name: action.payload.name\n        }\n    }\n    return state;\n}\n\nexport const currentUserData = {\n    name: 'Joe shmoe'\n}\n\nexport const selectName = (state) => {\n    return state.currentUser.name;\n}\n\n\n// Action creator\nexport const editName = (newName) => {\n    return {\n        type: 'edit-current-user-name',\n        payload: {\n            name: newName\n        }\n    }\n}\n\n// Redux Thunk\nexport const loadUser = () => {\n    return (dispatch, getState) => {\n        return loadCurrentUser().then((loadUser) => {\n            dispatch(editName(loadUser.name))\n        })\n    }\n}"]},"metadata":{},"sourceType":"module"}